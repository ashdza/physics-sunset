// Generated by BUCKLESCRIPT VERSION 1.10.3, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Picture     = require("interactive-pictures/src/picture.js");
var Caml_int32  = require("bs-platform/lib/js/caml_int32.js");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var Interaction = require("interactive-pictures/src/interaction.js");

var initialPerson = /* record */[
  /* base_mood */75,
  /* mood_swing */100,
  /* shift */20
];

function view(p) {
  var mood = p[/* base_mood */0] + p[/* mood_swing */1] | 0;
  var match = +(mood < 100);
  var color;
  if (match !== 0) {
    color = /* Orange */3;
  } else {
    var match$1 = +(mood < 150);
    color = match$1 !== 0 ? /* Pink */4 : /* Red */0;
  }
  var r = Pervasives.max(10 + mood | 0, 10);
  var match_000 = 250 + p[/* shift */2] | 0;
  var head_000 = /* tuple */[
    match_000,
    260
  ];
  var head = /* Circle */Block.__(0, [
      head_000,
      r,
      color
    ]);
  return Picture.picture(/* tuple */[
              1000,
              600
            ], /* :: */[
              head,
              /* [] */0
            ]);
}

var main = Interaction.draw(view(initialPerson));

function square(param_0) {
  return /* Square */Block.__(0, [param_0]);
}

function circle(param_0) {
  return /* Circle */Block.__(1, [param_0]);
}

function rect(param_0, param_1) {
  return /* Rect */Block.__(2, [
            param_0,
            param_1
          ]);
}

function r4(param) {
  return /* Rect */Block.__(2, [
            4,
            param
          ]);
}

function area(s) {
  switch (s.tag | 0) {
    case 0 : 
        var x = s[0];
        return Caml_int32.imul(x, x);
    case 1 : 
        var r = s[0];
        return r * (r * (2 * 3.142)) | 0;
    case 2 : 
        return Caml_int32.imul(s[0], s[1]);
    
  }
}

exports.initialPerson = initialPerson;
exports.view          = view;
exports.main          = main;
exports.square        = square;
exports.circle        = circle;
exports.rect          = rect;
exports.r4            = r4;
exports.area          = area;
/* main Not a pure module */
