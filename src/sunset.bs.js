// Generated by BUCKLESCRIPT VERSION 1.10.3, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var Picture     = require("interactive-pictures/src/picture.js");
var Tea_html    = require("bucklescript-tea/src/tea_html.js");
var Interaction = require("interactive-pictures/src/interaction.js");

function setRadius(param_0) {
  return /* SetRadius */Block.__(0, [param_0]);
}

function setTime(param_0) {
  return /* SetTime */Block.__(1, [param_0]);
}

function setHeight(param_0) {
  return /* SetHeight */Block.__(2, [param_0]);
}

function setSunDistance(param_0) {
  return /* SetSunDistance */Block.__(3, [param_0]);
}

function update(model, msg) {
  console.log(" Model: " + (String(model) + ("   Message: " + (String(msg) + " "))));
  if (typeof msg === "number") {
    if (msg) {
      return /* record */[
              /* personHeight */model[/* personHeight */0],
              /* planetRadius */model[/* planetRadius */1] - 20,
              /* planetRotationPeriod */model[/* planetRotationPeriod */2],
              /* currentTime */model[/* currentTime */3],
              /* sunDistance */model[/* sunDistance */4]
            ];
    } else {
      return /* record */[
              /* personHeight */model[/* personHeight */0],
              /* planetRadius */model[/* planetRadius */1] + 20,
              /* planetRotationPeriod */model[/* planetRotationPeriod */2],
              /* currentTime */model[/* currentTime */3],
              /* sunDistance */model[/* sunDistance */4]
            ];
    }
  } else {
    switch (msg.tag | 0) {
      case 0 : 
          return /* record */[
                  /* personHeight */model[/* personHeight */0],
                  /* planetRadius */msg[0],
                  /* planetRotationPeriod */model[/* planetRotationPeriod */2],
                  /* currentTime */model[/* currentTime */3],
                  /* sunDistance */model[/* sunDistance */4]
                ];
      case 1 : 
          return /* record */[
                  /* personHeight */model[/* personHeight */0],
                  /* planetRadius */model[/* planetRadius */1],
                  /* planetRotationPeriod */model[/* planetRotationPeriod */2],
                  /* currentTime */msg[0],
                  /* sunDistance */model[/* sunDistance */4]
                ];
      case 2 : 
          return /* record */[
                  /* personHeight */msg[0],
                  /* planetRadius */model[/* planetRadius */1],
                  /* planetRotationPeriod */model[/* planetRotationPeriod */2],
                  /* currentTime */model[/* currentTime */3],
                  /* sunDistance */model[/* sunDistance */4]
                ];
      case 3 : 
          return /* record */[
                  /* personHeight */model[/* personHeight */0],
                  /* planetRadius */model[/* planetRadius */1],
                  /* planetRotationPeriod */model[/* planetRotationPeriod */2],
                  /* currentTime */model[/* currentTime */3],
                  /* sunDistance */msg[0]
                ];
      
    }
  }
}

function angleAtTime(t, rot) {
  return t / rot * 2.0 * 3.14159;
}

function locationAtAngle(rad, angle, center) {
  return /* tuple */[
          rad * Math.cos(angle) + center[0] | 0,
          rad * Math.sin(angle) + center[1] | 0
        ];
}

function personPos(t, rot, rad, height, center) {
  var angle = angleAtTime(t, rot);
  var footPos = locationAtAngle(rad, angle, center);
  var headPos = locationAtAngle(rad + height, angle, center);
  return /* tuple */[
          footPos,
          headPos
        ];
}

function view(m) {
  var title = Tea_html.h1(/* None */0, /* None */0, /* :: */[
        Tea_html.class$prime("box title"),
        /* [] */0
      ], /* :: */[
        Tea_html.text("Interactive Sunset"),
        /* [] */0
      ]);
  var text = Tea_html.div(/* None */0, /* None */0, /* :: */[
        Tea_html.class$prime("box"),
        /* [] */0
      ], /* :: */[
        Tea_html.text("The green circle is earth viewed from a pole, the black stick figure is a person at the equator, and the pink dot is the sun.  \n  The person would see the sun setting at different times if lying down vs. standing up. \n  The orange and red lines are rays from the sun to the person's feet (person lying down) and head (person standing) respectively. \n  Many variables affect absolute sunset time, some of them affect the difference in sunset times.\n  This interactive app lets you explore these variables."),
        /* [] */0
      ]);
  var currentTime = m[/* currentTime */3];
  var planetRadius = m[/* planetRadius */1];
  var radius = planetRadius | 0;
  var planetCircle_000 = /* tuple */[
    250,
    280
  ];
  var planetCircle = /* Circle */Block.__(0, [
      planetCircle_000,
      radius,
      /* Green */2
    ]);
  var sunCenter_000 = 250 + (m[/* sunDistance */4] * planetRadius / 100 | 0) | 0;
  var sunCenter = /* tuple */[
    sunCenter_000,
    280
  ];
  var sunCircle = /* Circle */Block.__(0, [
      sunCenter,
      8,
      /* Pink */4
    ]);
  var match = personPos(currentTime, m[/* planetRotationPeriod */2], planetRadius, m[/* personHeight */0], /* tuple */[
        250,
        280
      ]);
  var personHead = match[1];
  var personFoot = match[0];
  var personLine = /* Line */Block.__(2, [
      personFoot,
      personHead,
      4,
      /* Black */8
    ]);
  var topRay = /* Line */Block.__(2, [
      personHead,
      sunCenter,
      2,
      /* Red */0
    ]);
  var bottomRay = /* Line */Block.__(2, [
      personFoot,
      sunCenter,
      2,
      /* Orange */3
    ]);
  var btnInc = Tea_html.button(/* None */0, /* None */0, /* :: */[
        Tea_html.onClick(/* IncRadius */0),
        /* :: */[
          Tea_html.class$prime("button"),
          /* [] */0
        ]
      ], /* :: */[
        Tea_html.text("Radius + 20"),
        /* [] */0
      ]);
  var btnDec = Tea_html.button(/* None */0, /* None */0, /* :: */[
        Tea_html.onClick(/* DecRadius */1),
        /* :: */[
          Tea_html.class$prime("button"),
          /* [] */0
        ]
      ], /* :: */[
        Tea_html.text("Radius - 20"),
        /* [] */0
      ]);
  var radSlider = Interaction.slider("Earth Radius", 50, 200, m[/* planetRadius */1] | 0, setRadius);
  var sunDistanceSlider = Interaction.slider("Sun's Distance", 150, 500, m[/* sunDistance */4] | 0, setSunDistance);
  var timeSlider = Interaction.slider("Earth Rotation", 0, m[/* planetRotationPeriod */2], m[/* currentTime */3], setTime);
  var heightSlider = Interaction.slider("Person's Height", 0, 60, m[/* personHeight */0] | 0, setHeight);
  var pic = Picture.picture(/* tuple */[
        1100,
        1000
      ], /* :: */[
        planetCircle,
        /* :: */[
          sunCircle,
          /* :: */[
            personLine,
            /* :: */[
              topRay,
              /* :: */[
                bottomRay,
                /* [] */0
              ]
            ]
          ]
        ]
      ]);
  return Tea_html.div(/* None */0, /* None */0, /* [] */0, /* :: */[
              title,
              /* :: */[
                text,
                /* :: */[
                  Tea_html.div(/* None */0, /* None */0, /* :: */[
                        Tea_html.class$prime("box"),
                        /* [] */0
                      ], /* :: */[
                        Tea_html.div(/* None */0, /* None */0, /* [] */0, /* :: */[
                              Tea_html.text(" Current Time (secs from MidDay): " + (String(currentTime) + "")),
                              /* [] */0
                            ]),
                        /* :: */[
                          Tea_html.div(/* None */0, /* None */0, /* [] */0, /* :: */[
                                btnInc,
                                /* :: */[
                                  btnDec,
                                  /* [] */0
                                ]
                              ]),
                          /* :: */[
                            radSlider,
                            /* :: */[
                              timeSlider,
                              /* :: */[
                                sunDistanceSlider,
                                /* :: */[
                                  heightSlider,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]),
                  /* :: */[
                    Tea_html.div(/* None */0, /* None */0, /* [] */0, /* :: */[
                          pic,
                          /* [] */0
                        ]),
                    /* [] */0
                  ]
                ]
              ]
            ]);
}

function deltaT(model) {
  var r = model[/* planetRadius */1];
  var theta = Math.acos(r / (r + model[/* personHeight */0]));
  return theta * model[/* planetRotationPeriod */2] / (2 * 3.14);
}

var initialModel = /* record */[
  /* personHeight */20,
  /* planetRadius */150,
  /* planetRotationPeriod */86400,
  /* currentTime */10000,
  /* sunDistance */200
];

function arg(param) {
  return Interaction.interact(initialModel, view, update, param);
}

function main(eta) {
  return Curry._1(arg(/* None */0), eta);
}

var H = 0;

var incRadius = /* IncRadius */0;

var decRadius = /* DecRadius */1;

exports.H               = H;
exports.incRadius       = incRadius;
exports.decRadius       = decRadius;
exports.setRadius       = setRadius;
exports.setTime         = setTime;
exports.setHeight       = setHeight;
exports.setSunDistance  = setSunDistance;
exports.update          = update;
exports.angleAtTime     = angleAtTime;
exports.locationAtAngle = locationAtAngle;
exports.personPos       = personPos;
exports.view            = view;
exports.deltaT          = deltaT;
exports.initialModel    = initialModel;
exports.main            = main;
/* No side effect */
